import os
import threading
from flask import Flask, redirect, url_for, render_template_string, request

app = Flask(__name__)

# --- Globals for capture thread ---
_stop_event = threading.Event()
_capture_thread = None

# --- Stop helper ---
def stop_timelapse():
    global _stop_event, _capture_thread
    if _stop_event:
        try: _stop_event.set()
        except Exception: pass
    if _capture_thread and getattr(_capture_thread, "is_alive", lambda: False)():
        try: _capture_thread.join(timeout=5)
        except Exception: pass
    _capture_thread = None
    _stop_event = threading.Event()

# --- Routes ---
@app.route("/")
def index():
    return render_template_string("""
        <h1>Timelapse Controller</h1>
        <form action="{{ url_for('start') }}" method="post">
          <button type="submit">Start</button>
        </form>
        <form action="{{ url_for('stop_route') }}" method="post">
          <button type="submit">Stop</button>
        </form>
    """)

@app.route("/start", methods=["POST"])
def start():
    # stub start (replace with real logic later)
    return redirect(url_for("index"))

@app.route("/stop", methods=["GET","POST"], endpoint="stop_route")
def stop_route():
    stop_timelapse()
    return redirect(url_for("index"))

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=5050)
